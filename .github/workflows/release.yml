name: Release

on:
  push:
    tags:
      - '*.*.*'

jobs:

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-14]
        python-version: ['3.12']
        group: [1, 2, 3, 4, 5]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run tests with Python ${{ matrix.python-version }} on ${{ matrix.os }}
        env:
          PYTEST_GROUP: ${{ matrix.group }}
        run: |
          pip install tox==4.14.1
          pip install poetry==1.8.2
          tox -e py_partial

  getrelease:
    name: Get release
    needs: test
    runs-on: ubuntu-22.04
    outputs:
      versionoutput: ${{ steps.getversiontag.outputs.VERSION }}
    steps:
      - name: Get the tag version
        id: getversiontag
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}


  build:
    name: Build packages
    needs: getrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:

          - os: ubuntu-22.04
            TARGET: ubuntu

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Release
        id: release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          prerelease: true

  upload:
    name: Upload to PyPI
    needs: [build]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: x64
      - run: pip install poetry==1.8.2
      - run: poetry build
      - run: poetry publish --username=__token__ --password=${{ secrets.PYPI_TOKEN }}

